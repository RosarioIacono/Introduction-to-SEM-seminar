cards<-read.table("./data/cardinale_et_al_2008_data.txt", sep="\t", header=T)
cards<-na.omit(cards)
cardModel<-'
SA ~ logN + logNcen2 + SR
logChl ~ SA + logN
GPP ~ logN + logChl
SR ~~ 0*logN + 0*logNcen2 #from path model - otherwise these are estimated
'
#fixed.x=F in order to allow the dropping of paths between
#SR and logN and LogNcen2
cardFit <- sem(cardModel, data=cards, fixed.x=F)
library(lavaan)
library(lavaanPlot)
cards<-read.table("./data/cardinale_et_al_2008_data.txt", sep="\t", header=T)
cards<-na.omit(cards)
cardModel<-'
SA ~ logN + logNcen2 + SR
logChl ~ SA + logN
GPP ~ logN + logChl
SR ~~ 0*logN + 0*logNcen2 #from path model - otherwise these are estimated
'
#fixed.x=F in order to allow the dropping of paths between
#SR and logN and LogNcen2
cardFit <- sem(cardModel, data=cards, fixed.x=F)
summary(cardFit)
standardizedSolution(cardFit)
?standardizedSolution
lavaanPlot(model = cardFit,
labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
lavaanPlot(model = cardFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
lavaanPlot(model = cardFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
lavaanPlot(model = cardFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = FALSE,
stand = TRUE)
View(cards)
compositeModel<-'
#1) define the composite, scale to logN
Nitrogen ~ logN + 1*logNcen2 #loading on the significant path!
#2) Specify 0 error variance
Nitrogen ~~ 0*Nitrogen
#3) now, because we need to represent this as a latent variable
#show how species richness is an _indicator_ of nitrogen
Nitrogen =~ SA
#4) BUT, make sure the variance of SA is estimated
SA ~~ SA
#Regional Richness also has an effect
SA ~ SR
#And account for the derivation of the square term from the linear term
logNcen2 ~ logN
'
# we specify std.lv=T so that the Nitrogen-SA relationship isn't fixed to 1
compositeFit <-sem(compositeModel, data=cards, std.lv=T)
lavaanPlot(model = compositeFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = FALSE,
stand = TRUE)
summary(compositeFit)
standardizedSolution(compositeFit)
model <- 'mpg ~ cyl + disp + hp
qsec ~ disp + hp + wt'
fit <- sem(model, data = mtcars, group = model)
data("mtcars")
model <- 'mpg ~ cyl + disp + hp
qsec ~ disp + hp + wt'
fit <- sem(model, data = mtcars, group = model)
View(mtcars)
?mtcars
library(tidyverse)
mtcars<-mtcars%>%rownames_to_column()
mtcars<-mtcars%>%rownames_to_column(model)
View(mtcars)
data(mtcars)
mtcars<-mtcars%>%rownames_to_column(model)
View(mtcars)
data(mtcars)
mtcars<-mtcars%>%rownames_to_column("model")
model <- 'mpg ~ cyl + disp + hp
qsec ~ disp + hp + wt'
fit <- sem(model, data = mtcars, group = model)
model <- 'mpg ~ cyl + disp + hp
qsec ~ disp + hp + wt'
fit <- sem(model, data = mtcars, group = "model")
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- sem(HS.model,
data = HolzingerSwineford1939,
group = "school")
summary(fit)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- sem(HS.model,
data = HolzingerSwineford1939,
group = "school")
lavaanPlot(model = fit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = FALSE,
stand = TRUE)
summary(fit)
?lavaanPlot
fit <- sem(HS.model,
data = HolzingerSwineford1939,
group = "school")
lavaanPlot(model = fit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
summary(fit)
fit <- sem(HS.model,
data = HolzingerSwineford1939,
group = "school")
lavaanPlot(model = fit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
summary(fit)
install.packages("semPath")
install.packages("semPlot")
library(semPlot)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
install.packages("wesanderson")
library(wesanderson)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "col", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
?semPaths
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "path", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "diagram", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "stand", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "eq", whatLabels = "name", style = "mx",
color = colorlist, rotation =1 , layout = "spring",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
cols <- wes_palette(name = "Moonrise2", n = 4, type = "discrete")
colorlist <- list(man = cols[2], lat = cols[3])
semPaths(fit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
semPaths(compositeFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
semPaths(cardFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
semPaths(cardFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree2",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
semPaths(cardFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "circle",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
semPaths(cardFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =2 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
lavaanPlot(model = cardFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = FALSE,
stand = TRUE)
semPaths(cardFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
lavaanPlot(model = cardFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
semPaths(fit, what = "eq",
whatLabels = "name",
style = "mx",
color = colorlist,
rotation =3 ,
layout = "tree",
nCharNodes = 7,
shapeMan = "rectangle",
sizeMan = 8,
sizeMan2 = 5)
semPaths(fit, what = "eq",
whatLabels = "std",
style = "mx",
color = colorlist,
rotation =3 ,
layout = "tree",
nCharNodes = 7,
shapeMan = "rectangle",
sizeMan = 8,
sizeMan2 = 5)
style = "mx",
semPaths(fit, what = "eq",
whatLabels = "std",
style = "mx",
color = colorlist,
rotation =3 ,
layout = "tree",
nCharNodes = 7,
shapeMan = "rectangle",
sizeMan = 8,
sizeMan2 = 5)
semPaths(fit, what = "eq",
whatLabels = "std",
style = "mx",
color = colorlist,
rotation =1,
layout = "tree",
nCharNodes = 7,
shapeMan = "rectangle",
sizeMan = 8,
sizeMan2 = 5)
library(lavaan)
library(lavaanPlot)
library(tidyverse)
semPaths(compositeFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
library(semPlot)
semPaths(compositeFit, what = "eq", whatLabels = "std", style = "mx",
color = colorlist, rotation =1 , layout = "tree",  nCharNodes = 7,
shapeMan = "rectangle", sizeMan = 8, sizeMan2 = 5)
lavaanPlot(model = compositeFit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = FALSE,
stand = TRUE)
HS.model <- ' visual  =~ x1 + x2 + x3
textual =~ x4 + x5 + x6
speed   =~ x7 + x8 + x9 '
fit <- sem(HS.model,
data = HolzingerSwineford1939,
group = "school")
lavaanPlot(model = fit,
#labels = labels,
node_options = list(shape = "box", fontname = "Helvetica"),
edge_options = list(color = "grey"),
coefs = TRUE,
stand = TRUE)
semPaths(fit, what = "eq",
whatLabels = "std",
style = "mx",
color = colorlist,
rotation =1,
layout = "tree",
nCharNodes = 7,
shapeMan = "rectangle",
sizeMan = 8,
sizeMan2 = 5)
summary(fit)
parameterEstimates(fit)
lavResiduals(fit)
AIC(fit)
BIC(fit)
#Multiple group SEM
# Data from Holzinger and Swineford, 1939
?HolzingerSwineford1939
